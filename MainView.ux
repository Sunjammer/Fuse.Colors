<App>
    <Android.StatusBarConfig Color="Black" />
    
    <Fuse.Colors.Palette ux:Name="gen" Mode="Complementary" />

    <JavaScript>
        const O = require("FuseJS/Observable")
        const state = O(false)
        module.exports = {
            state,
            toggleState : () => state.value = !state.value
        }
    </JavaScript>

    <WhileTrue Value="{state}">
        <Change colors.LayoutMaster="fullscreen"/>
    </WhileTrue>

    <ClientPanel>
        <Panel ux:Name="fullscreen"/>
        <DockPanel>
            <Grid ux:Name="colors" RowCount="5">
                <Panel Color="{Property gen.C1}"/>
                <Panel Color="{Property gen.C2}"/>
                <Panel Color="{Property gen.C3}"/>
                <Panel Color="{Property gen.C4}"/>
                <Panel Color="{Property gen.C5}"/>
                <Tapped Handler="{toggleState}"/>
                <LayoutAnimation>
                    <Resize Vector="1" RelativeTo="LayoutChange" Easing="BackIn" Duration="0.1"/>
                </LayoutAnimation>
            </Grid>

            <StackPanel Dock="Bottom" >
                <Grid ColumnCount="3" Margin="0, 16">
                    <Button Text="Triad">
                        <Tapped>
                            <Set gen.Mode="Triad"/>
                        </Tapped>
                    </Button>
                    <Button Text="Complementary">
                        <Tapped>
                            <Set gen.Mode="Complementary"/>
                        </Tapped>
                    </Button>
                    <Button Text="Shades">
                        <Tapped>
                            <Set gen.Mode="Shades"/>
                        </Tapped>
                    </Button>
                </Grid>
                <StackPanel Padding="16">
                    <Grid Columns="120,1*">
                        <Text Value="Hue" />
                        <Slider Value="{Property gen.Hue}" Minimum="0" Maximum="1"/>
                    </Grid>
                    <Grid Columns="120,1*">
                        <Text Value="Saturation" />
                        <Slider Value="{Property gen.Saturation}" Minimum="0" Maximum="1"/>
                    </Grid>
                    <Grid Columns="120,1*">
                        <Text Value="Value" />
                        <Slider Value="{Property gen.Value}" Minimum="0" Maximum="1"/>
                    </Grid>
                    <Grid ColumnCount="3">
                        <DockPanel>
                            <Text Value="R+" Margin="8" Dock="Left"/>
                            <Slider Value="{Property gen.ScaleR}" Minimum="0" Maximum="1"/>
                        </DockPanel>
                        <DockPanel>
                            <Text Value="G+" Margin="8" Dock="Left"/>
                            <Slider Value="{Property gen.ScaleG}" Minimum="0" Maximum="1"/>
                        </DockPanel>
                        <DockPanel>
                            <Text Value="B+" Margin="8" Dock="Left"/>
                            <Slider Value="{Property gen.ScaleB}" Minimum="0" Maximum="1"/>
                        </DockPanel>
                    </Grid>
                    <Grid ColumnCount="3">
                        <DockPanel>
                            <Text Value="R*" Margin="8" Dock="Left"/>
                            <Slider Value="{Property gen.ScaleR}" Minimum="0" Maximum="1"/>
                        </DockPanel>
                        <DockPanel>
                            <Text Value="G*" Margin="8" Dock="Left"/>
                            <Slider Value="{Property gen.ScaleG}" Minimum="0" Maximum="1"/>
                        </DockPanel>
                        <DockPanel>
                            <Text Value="B*" Margin="8" Dock="Left"/>
                            <Slider Value="{Property gen.ScaleB}" Minimum="0" Maximum="1"/>
                        </DockPanel>
                    </Grid>
                </StackPanel>
            </StackPanel>
        </DockPanel>
    </ClientPanel>
</App>
